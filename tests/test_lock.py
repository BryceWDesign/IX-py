# tests/test_lock.py

import os
from pathlib import Path
import pytest
from zeroenv import lock, manager

LOCKFILE_PATH = Path("requirements.lock")

@pytest.fixture(autouse=True)
def setup_clean_env():
    if LOCKFILE_PATH.exists():
        LOCKFILE_PATH.unlink()
    if not manager.environment_exists():
        manager.initialize_environment()
    yield
    if LOCKFILE_PATH.exists():
        LOCKFILE_PATH.unlink()

def test_lockfile_generation_creates_file():
    lock.generate_lockfile()
    assert LOCKFILE_PATH.exists()
    contents = LOCKFILE_PATH.read_text()
    assert "# Auto-generated by IX-py" in contents

def test_lockfile_is_overwritten_cleanly():
    # Write dummy data
    LOCKFILE_PATH.write_text("dummy content")
    lock.generate_lockfile()
    contents = LOCKFILE_PATH.read_text()
    assert "dummy content" not in contents
    assert "# Auto-generated by IX-py" in contents
